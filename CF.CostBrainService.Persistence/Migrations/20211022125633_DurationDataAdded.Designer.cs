// <auto-generated />
using System;
using CF.CostBrainService.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CF.CostBrainService.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211022125633_DurationDataAdded")]
    partial class DurationDataAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cost")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserPrincipal")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("AppUsers", "cost");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedByUserId = new Guid("eaa6081c-16f1-41be-9153-5662bc03e9fc"),
                            CreatedOn = new DateTime(2020, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "admin",
                            Email = "Costadmin",
                            IsDeleted = false,
                            Name = "CostAdmin",
                            Role = 1,
                            UserPrincipal = "admin"
                        });
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.Concept", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CostType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsCostCalculated")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Measurement")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Concept", "cost");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.CostCalculation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConceptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CostType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EquipmentCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Measurement")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("CostCalculation", "cost");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("Country", "cost");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostimatorCBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Manifolding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WBSId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("Equipment", "cost");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f03a3513-efc7-4b85-8cc3-1b470ab3baad"),
                            Category = "dummy",
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Manifolding = "dummy",
                            WBSId = 1180
                        });
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.EquipmentCost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Acid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CountryCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Electrical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Instrument")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Others")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Piping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrimarySteel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SecondarySteel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Standard")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("EquipmentCost", "cost");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.Fabrication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Manhours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ManhoursPerMT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("Fabrication", "cost");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.InstallationDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InstallationId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("InstallationDetails", "cost");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c41cdc85-c587-47a7-a199-41ed7e7afd49"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 223m,
                            InstallationId = new Guid("a6ff30eb-47be-4fa8-8f7f-d2215b24bd79"),
                            IsDeleted = false,
                            Type = "Pile through leg"
                        },
                        new
                        {
                            Id = new Guid("49748d93-5d39-46a8-bf8a-8fd48345bfbf"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 178m,
                            InstallationId = new Guid("a6ff30eb-47be-4fa8-8f7f-d2215b24bd79"),
                            IsDeleted = false,
                            Type = "Skirt Pile"
                        },
                        new
                        {
                            Id = new Guid("e8108adc-7267-4494-88aa-11d760eb1f86"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 261m,
                            InstallationId = new Guid("ccbf5380-21e0-48f0-bf39-1db0df739420"),
                            IsDeleted = false,
                            Type = "Pile through leg"
                        },
                        new
                        {
                            Id = new Guid("87dfc484-a578-4a43-ac68-c73ae47bf74b"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 214m,
                            InstallationId = new Guid("ccbf5380-21e0-48f0-bf39-1db0df739420"),
                            IsDeleted = false,
                            Type = "Skirt Pile"
                        },
                        new
                        {
                            Id = new Guid("1b3f2b69-2e35-4525-b620-bde0cde45184"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 370m,
                            InstallationId = new Guid("eb983470-e461-4bb5-a632-39f093ce464b"),
                            IsDeleted = false,
                            Type = "Pile through leg"
                        },
                        new
                        {
                            Id = new Guid("c68688f1-1216-4041-b514-ff2c342d2a6d"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 342m,
                            InstallationId = new Guid("eb983470-e461-4bb5-a632-39f093ce464b"),
                            IsDeleted = false,
                            Type = "Skirt Pile"
                        },
                        new
                        {
                            Id = new Guid("13892e5d-c7b5-4c67-86c6-b4b71f9ec12b"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 19m,
                            InstallationId = new Guid("040eb60e-119e-4de0-883a-79ef56dfe69c"),
                            IsDeleted = false,
                            Type = "Conductor Installation"
                        },
                        new
                        {
                            Id = new Guid("3381dd1b-e7e1-4cf0-9140-a493acecc7d6"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 3m,
                            InstallationId = new Guid("8f8a26df-0885-486f-b3c6-23efee6b6c3b"),
                            IsDeleted = false,
                            Type = "General"
                        });
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.MasterInstallation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstallationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("MasterInstallation", "cost");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6ff30eb-47be-4fa8-8f7f-d2215b24bd79"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstallationName = "3 Legged Jacket Pile Installation",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ccbf5380-21e0-48f0-bf39-1db0df739420"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstallationName = "4 Legged Jacket Pile Installation",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("eb983470-e461-4bb5-a632-39f093ce464b"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstallationName = "8 Legged Jacket Pile Installation",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("040eb60e-119e-4de0-883a-79ef56dfe69c"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstallationName = "Conductor Installation",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstallationName = "Topside Installation",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3d04aa2b-2bf2-4ede-90b2-e255b7970cae"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstallationName = "Modules Installation",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("8f8a26df-0885-486f-b3c6-23efee6b6c3b"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstallationName = "Post Installation Survey",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.MasterWeight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("MasterWeight", "cost");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6213bcf9-a424-4d10-942a-266cd825dc02"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Weight = "Below 500"
                        },
                        new
                        {
                            Id = new Guid("5b8fa167-e802-4eee-9af8-47b0def1cf5c"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Weight = "501-1000"
                        },
                        new
                        {
                            Id = new Guid("8d2b0e8c-beed-40ec-bf0d-7b40dd2781b3"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Weight = "1001-1500"
                        },
                        new
                        {
                            Id = new Guid("f6c025ce-0927-4f2a-b8a5-9b8e10bf36a2"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Weight = "1501-2000"
                        },
                        new
                        {
                            Id = new Guid("6f191103-e823-45a6-951a-3362dad331e5"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Weight = "2001-2500"
                        },
                        new
                        {
                            Id = new Guid("b2a8b83c-7550-4f8b-b49b-5363db9e439f"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Weight = "2500 and above"
                        });
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.TopsideModuleInstallation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberOfLeg")
                        .HasColumnType("int");

                    b.Property<Guid>("WeightId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InstallationId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("WeightId");

                    b.ToTable("TopsideModuleInstallation", "cost");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd204585-9cce-4242-a2db-5fa845f3ac5e"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 49m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 1,
                            WeightId = new Guid("6213bcf9-a424-4d10-942a-266cd825dc02")
                        },
                        new
                        {
                            Id = new Guid("2cec7062-0de9-4cae-94d8-1816a2bf1803"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 51m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 1,
                            WeightId = new Guid("5b8fa167-e802-4eee-9af8-47b0def1cf5c")
                        },
                        new
                        {
                            Id = new Guid("a22775e4-ecb3-403d-9003-e57db835de62"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 53m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 1,
                            WeightId = new Guid("8d2b0e8c-beed-40ec-bf0d-7b40dd2781b3")
                        },
                        new
                        {
                            Id = new Guid("34482443-0898-4e3b-940a-c25484f60013"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 55m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 1,
                            WeightId = new Guid("f6c025ce-0927-4f2a-b8a5-9b8e10bf36a2")
                        },
                        new
                        {
                            Id = new Guid("6550afd6-bb4d-46e9-adca-73aa9234433a"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 57m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 1,
                            WeightId = new Guid("6f191103-e823-45a6-951a-3362dad331e5")
                        },
                        new
                        {
                            Id = new Guid("37c0d56c-0c76-400d-9a06-cca2436bd0ab"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 57m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 1,
                            WeightId = new Guid("b2a8b83c-7550-4f8b-b49b-5363db9e439f")
                        },
                        new
                        {
                            Id = new Guid("c61a13c1-64c3-42c2-8ac3-1e556097dab4"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 55m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 3,
                            WeightId = new Guid("6213bcf9-a424-4d10-942a-266cd825dc02")
                        },
                        new
                        {
                            Id = new Guid("7bf8db79-6c4e-4881-9d4a-2d8fdddaec86"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 57m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 3,
                            WeightId = new Guid("5b8fa167-e802-4eee-9af8-47b0def1cf5c")
                        },
                        new
                        {
                            Id = new Guid("56d0f16a-aa1c-456c-baac-40ec672862b1"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 59m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 3,
                            WeightId = new Guid("8d2b0e8c-beed-40ec-bf0d-7b40dd2781b3")
                        },
                        new
                        {
                            Id = new Guid("cd7432ff-5670-4da0-b66a-0e3cc9034900"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 61m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 3,
                            WeightId = new Guid("f6c025ce-0927-4f2a-b8a5-9b8e10bf36a2")
                        },
                        new
                        {
                            Id = new Guid("80de0922-3fd9-4400-a861-3d95a96524a0"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 63m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 3,
                            WeightId = new Guid("6f191103-e823-45a6-951a-3362dad331e5")
                        },
                        new
                        {
                            Id = new Guid("10b315e6-8ad0-46cd-9a7c-850bc6a169f5"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 63m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 3,
                            WeightId = new Guid("b2a8b83c-7550-4f8b-b49b-5363db9e439f")
                        },
                        new
                        {
                            Id = new Guid("b5589ee4-c7ba-49ef-8a61-204a3e389606"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 58m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 4,
                            WeightId = new Guid("6213bcf9-a424-4d10-942a-266cd825dc02")
                        },
                        new
                        {
                            Id = new Guid("592769c3-30d8-461f-92e9-8b9b237c6fa8"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 4,
                            WeightId = new Guid("5b8fa167-e802-4eee-9af8-47b0def1cf5c")
                        },
                        new
                        {
                            Id = new Guid("a1d61eaf-6d46-4272-8a02-133affb5ef98"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 62m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 4,
                            WeightId = new Guid("8d2b0e8c-beed-40ec-bf0d-7b40dd2781b3")
                        },
                        new
                        {
                            Id = new Guid("d3c29d0f-2595-4803-b470-4106c2f9728d"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 64m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 4,
                            WeightId = new Guid("f6c025ce-0927-4f2a-b8a5-9b8e10bf36a2")
                        },
                        new
                        {
                            Id = new Guid("a05a9dd6-0647-4c6b-b63b-a93a7ed88fc6"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 66m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 4,
                            WeightId = new Guid("6f191103-e823-45a6-951a-3362dad331e5")
                        },
                        new
                        {
                            Id = new Guid("eb0c5a90-ca2c-4c6e-ae0c-3d677799de00"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 66m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 4,
                            WeightId = new Guid("b2a8b83c-7550-4f8b-b49b-5363db9e439f")
                        },
                        new
                        {
                            Id = new Guid("61938ecd-a3da-4bdc-9cd5-052442c1c09b"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 66m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 6,
                            WeightId = new Guid("6213bcf9-a424-4d10-942a-266cd825dc02")
                        },
                        new
                        {
                            Id = new Guid("20a02a76-9d4b-4e18-9a22-19f85f24bf60"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 72m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 6,
                            WeightId = new Guid("5b8fa167-e802-4eee-9af8-47b0def1cf5c")
                        },
                        new
                        {
                            Id = new Guid("74101fa9-a816-4146-b08b-ce6d9abc9ebe"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 75m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 6,
                            WeightId = new Guid("8d2b0e8c-beed-40ec-bf0d-7b40dd2781b3")
                        },
                        new
                        {
                            Id = new Guid("f92e3e65-fbaa-4002-a5dd-7629fa907e11"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 78m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 6,
                            WeightId = new Guid("f6c025ce-0927-4f2a-b8a5-9b8e10bf36a2")
                        },
                        new
                        {
                            Id = new Guid("ed3651ef-f079-48ec-96bf-ae8a74f6e99c"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 80m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 6,
                            WeightId = new Guid("6f191103-e823-45a6-951a-3362dad331e5")
                        },
                        new
                        {
                            Id = new Guid("d24aca33-4544-4afb-b560-e9177689a2c7"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 80m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 6,
                            WeightId = new Guid("b2a8b83c-7550-4f8b-b49b-5363db9e439f")
                        },
                        new
                        {
                            Id = new Guid("ff6dc079-452c-489e-8907-bf794d217757"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 78m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 8,
                            WeightId = new Guid("6213bcf9-a424-4d10-942a-266cd825dc02")
                        },
                        new
                        {
                            Id = new Guid("77ac302e-225d-4b6d-8d70-bfb58a3f6bf2"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 81m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 8,
                            WeightId = new Guid("5b8fa167-e802-4eee-9af8-47b0def1cf5c")
                        },
                        new
                        {
                            Id = new Guid("18e04660-bd34-4458-b832-17f753782844"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 84m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 8,
                            WeightId = new Guid("8d2b0e8c-beed-40ec-bf0d-7b40dd2781b3")
                        },
                        new
                        {
                            Id = new Guid("0d43883b-db32-4543-8fa2-fa34eb4267cc"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 87m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 8,
                            WeightId = new Guid("f6c025ce-0927-4f2a-b8a5-9b8e10bf36a2")
                        },
                        new
                        {
                            Id = new Guid("a05b7fad-4528-4608-93b6-72778dd2426f"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 90m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 8,
                            WeightId = new Guid("6f191103-e823-45a6-951a-3362dad331e5")
                        },
                        new
                        {
                            Id = new Guid("8dc49be2-06e7-424f-af33-fe8a2b65fcc2"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 90m,
                            InstallationId = new Guid("177cb4f7-0dc8-45aa-a4af-720206f9f7be"),
                            IsDeleted = false,
                            NumberOfLeg = 8,
                            WeightId = new Guid("b2a8b83c-7550-4f8b-b49b-5363db9e439f")
                        },
                        new
                        {
                            Id = new Guid("dc8a9ff3-0551-45b1-afe8-b24bfa708133"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 55m,
                            InstallationId = new Guid("3d04aa2b-2bf2-4ede-90b2-e255b7970cae"),
                            IsDeleted = false,
                            WeightId = new Guid("6213bcf9-a424-4d10-942a-266cd825dc02")
                        },
                        new
                        {
                            Id = new Guid("7725b37e-af06-4c84-89ec-120e34020919"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 57m,
                            InstallationId = new Guid("3d04aa2b-2bf2-4ede-90b2-e255b7970cae"),
                            IsDeleted = false,
                            WeightId = new Guid("5b8fa167-e802-4eee-9af8-47b0def1cf5c")
                        },
                        new
                        {
                            Id = new Guid("68feb7bb-a716-49f4-965e-6c0972970def"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 59m,
                            InstallationId = new Guid("3d04aa2b-2bf2-4ede-90b2-e255b7970cae"),
                            IsDeleted = false,
                            WeightId = new Guid("8d2b0e8c-beed-40ec-bf0d-7b40dd2781b3")
                        },
                        new
                        {
                            Id = new Guid("88ab41ca-ce4d-4856-9791-e3540b1f1f4d"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 61m,
                            InstallationId = new Guid("3d04aa2b-2bf2-4ede-90b2-e255b7970cae"),
                            IsDeleted = false,
                            WeightId = new Guid("f6c025ce-0927-4f2a-b8a5-9b8e10bf36a2")
                        },
                        new
                        {
                            Id = new Guid("9bfdffc5-9f81-46b8-acdb-7968c3a4edb3"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 63m,
                            InstallationId = new Guid("3d04aa2b-2bf2-4ede-90b2-e255b7970cae"),
                            IsDeleted = false,
                            WeightId = new Guid("6f191103-e823-45a6-951a-3362dad331e5")
                        },
                        new
                        {
                            Id = new Guid("124110a2-9cf4-4353-85b3-f86ecfa2d2fe"),
                            CreatedByUserId = new Guid("69263077-35ff-4d1d-a74d-af9ec8792485"),
                            CreatedOn = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 63m,
                            InstallationId = new Guid("3d04aa2b-2bf2-4ede-90b2-e255b7970cae"),
                            IsDeleted = false,
                            WeightId = new Guid("b2a8b83c-7550-4f8b-b49b-5363db9e439f")
                        });
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.AppUser", b =>
                {
                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.CostCalculation", b =>
                {
                    b.HasOne("CF.CostBrainService.Application.Entities.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.Country", b =>
                {
                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.Equipment", b =>
                {
                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.EquipmentCost", b =>
                {
                    b.HasOne("CF.CostBrainService.Application.Entities.Country", "CountryData")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CF.CostBrainService.Application.Entities.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CountryData");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Equipment");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.Fabrication", b =>
                {
                    b.HasOne("CF.CostBrainService.Application.Entities.Country", "CountryData")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CF.CostBrainService.Application.Entities.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CountryData");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Equipment");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.InstallationDetails", b =>
                {
                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CF.CostBrainService.Application.Entities.MasterInstallation", "MasterInstallation")
                        .WithMany()
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("MasterInstallation");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.MasterInstallation", b =>
                {
                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.MasterWeight", b =>
                {
                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CF.CostBrainService.Application.Entities.TopsideModuleInstallation", b =>
                {
                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CF.CostBrainService.Application.Entities.MasterInstallation", "MasterInstallation")
                        .WithMany()
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CF.CostBrainService.Application.Entities.AppUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CF.CostBrainService.Application.Entities.MasterWeight", "MasterWeight")
                        .WithMany()
                        .HasForeignKey("WeightId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("MasterInstallation");

                    b.Navigation("MasterWeight");

                    b.Navigation("ModifiedByUser");
                });
#pragma warning restore 612, 618
        }
    }
}
